basePath: /
definitions:
  models.ShortUser:
    properties:
      email:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
  models.Transaction:
    properties:
      amount:
        type: number
      created_at:
        type: string
      description:
        type: string
      id:
        type: string
      type:
        type: string
      user:
        $ref: '#/definitions/models.ShortUser'
    type: object
  models.User:
    properties:
      email:
        type: string
      id:
        type: string
      name:
        type: string
      password:
        type: string
    type: object
host: localhost:3000
info:
  contact: {}
  description: Finance Tracker API Documentation
  title: Finance Tracker API
  version: "1.0"
paths:
  /api/transaction/{id}:
    get:
      consumes:
      - application/json
      description: Get transaction
      parameters:
      - description: Transaction ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Transaction'
      summary: Get transaction
      tags:
      - transactions
  /api/transactions:
    get:
      consumes:
      - application/json
      description: Get transactions
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Transaction'
            type: array
      summary: Get transactions
      tags:
      - transactions
    post:
      consumes:
      - application/json
      description: Create transaction
      parameters:
      - description: Transaction
        in: body
        name: transaction
        required: true
        schema:
          $ref: '#/definitions/models.Transaction'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            type: string
      summary: Create transaction
      tags:
      - transactions
  /api/transactions/{id}:
    delete:
      consumes:
      - application/json
      description: Delete transaction
      parameters:
      - description: Transaction ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Delete transaction
      tags:
      - transactions
    put:
      consumes:
      - application/json
      description: Update transaction
      parameters:
      - description: Transaction ID
        in: path
        name: id
        required: true
        type: string
      - description: Transaction
        in: body
        name: transaction
        required: true
        schema:
          $ref: '#/definitions/models.Transaction'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Update transaction
      tags:
      - transactions
  /api/transactions/analyze:
    get:
      consumes:
      - application/json
      description: Analyze transactions
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Analyze transactions
      tags:
      - transactions
  /api/user:
    post:
      consumes:
      - application/json
      description: get user by id
      operationId: get-user
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
        "500":
          description: internal server error
          schema:
            type: string
      summary: Get User
      tags:
      - user
    put:
      consumes:
      - application/json
      description: update user
      operationId: update-user
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
        "400":
          description: bad request
          schema:
            type: string
        "500":
          description: internal server error
          schema:
            type: string
      summary: Update User
      tags:
      - user
  /auth/signin:
    post:
      consumes:
      - application/json
      description: sign in
      operationId: sign-in
      parameters:
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
        "400":
          description: bad request
          schema:
            type: string
        "500":
          description: internal server error
          schema:
            type: string
      summary: Sign in
      tags:
      - auth
  /auth/signup:
    post:
      consumes:
      - application/json
      description: sign up
      operationId: sign-up
      parameters:
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "201":
          description: ok
          schema:
            type: string
        "400":
          description: bad request
          schema:
            type: string
        "500":
          description: internal server error
          schema:
            type: string
      summary: Sign up
      tags:
      - auth
swagger: "2.0"
